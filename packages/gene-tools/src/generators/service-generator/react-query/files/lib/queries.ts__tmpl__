import {QueryClient, QueryFunctionContext} from '@tanstack/react-query';
import {
  reactQueryFetchWrapper,
} from '@brainly/gene';
import nodeFetch from 'node-fetch';

export type <%= fileName %>DataTypeAPI = {
  title: string;
};
export type VariablesType = {
  id: number
};

export const queryKey = (variables?: VariablesType) => [
  '<%= lowerCaseFileName %>-key',
  variables,
];

export function queryFn(variables: VariablesType, context?: QueryFunctionContext) {
  const url = 'https://jsonplaceholder.typicode.com/todos/${variables.id}';
  const fetchMethod = typeof window === 'undefined' ? nodeFetch : fetch;
  return reactQueryFetchWrapper<<%= fileName %>DataTypeAPI>(() =>
    fetchMethod(url)
  );
}

export async function query<%= fileName %>(client: QueryClient, variables: VariablesType) {
  return client.fetchQuery({
    queryFn: () => queryFn(variables),
    queryKey: queryKey(variables),
  });
}
